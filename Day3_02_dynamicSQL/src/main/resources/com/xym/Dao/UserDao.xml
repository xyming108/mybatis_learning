<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xym.Dao.UserDao">

    <!--了解的内容，抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!--配置查询所有-->
    <select id="findAll" resultType="com.xym.domain.User">
        <include refid="defaultUser"></include>
    </select>

    <!--根据id查询用户-->
    <!--parameterType可以随便写，只要可以表示出int类型就可以，resultType表示返回对象，这里返回对象是User类型-->
    <select id="findById" parameterType="INT" resultType="com.xym.domain.User">
        select * from user where id = #{uid};
    </select>

    <!--根据名称模糊查询的方法-->
    <select id="findByName" parameterType="string" resultType="com.xym.domain.User">
        select * from user where username like #{name};
    </select>

    <!--根据QueryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.xym.domain.QueryVo" resultType="com.xym.domain.User">
        select * from user where username like #{user.username};
    </select>

    <!--根据条件查询-->
    <select id="findUserByCondition" parameterType="com.xym.domain.User" resultType="com.xym.domain.User">
        /*如果后面还有内容，则不能加 ";"（分号） */
        select * from user
        <where>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="sex != null">
                and sex=#{sex}
            </if>
        </where>
    </select>

    <!--根据QueryVo中提供的id集合，查询用户信息-->
    <select id="findUserInIds" resultType="com.xym.domain.User" parameterType="com.xym.domain.QueryVo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
